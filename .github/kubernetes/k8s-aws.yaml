apiVersion: v1
kind: Namespace
metadata:
  name: myapp

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: myapp
data:
  DB_HOST: "${DB_HOST}"
  DB_PORT: "5432"
  DB_NAME: "${DB_NAME}"
  LOGS_HOST: "${LOGS_HOST}"
  LOGS_DB_PORT: "5432"
  LOGS_DB: "${LOGS_DB}"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-app
  namespace: myapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fastapi-app
  template:
    metadata:
      labels:
        app: fastapi-app
    spec:
      containers:
        - name: fastapi-app
          image: ${ECR_REPOSITORY_URL}:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: app-secrets
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "500m"
              memory: "512Mi"
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-app
  namespace: myapp
spec:
  selector:
    app: fastapi-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: LoadBalancer

---
# Persistent volume for app data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fastapi-app-pvc
  namespace: myapp
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2
  resources:
    requests:
      storage: 1Gi